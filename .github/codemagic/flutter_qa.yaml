name: Buenro Mobile | Compile Project

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

run-name: 'üë∑üöß[#${{ github.run_number }}][PulseQA Compile | Web] PR: "${{ github.event.pull_request.title }}"'

on:
  pull_request:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - "integration_test/**"
      - "pubspec.yaml"
      - "scripts/**"
  push:
    branches:
      - main
    paths:
      - "lib/**"
      - "test/**"
      - "integration_test/**"
      - "pubspec.yaml"
      - "scripts/**"
  workflow_dispatch:

jobs:
  filter:
    name: Detect Mobile QA Changes
    runs-on: ubuntu-latest
    outputs:
      flutter: ${{ steps.filter.outputs.flutter }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter Mobile QA Paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            flutter:
              - 'lib/**'
              - 'test/**'
              - 'integration_test/**'
              - 'scripts/**'
              - 'pubspec.yaml'

  qa:
    name: Run Flutter QA Tests üß™
    needs: filter
    if: needs.filter.outputs.flutter == 'true'
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run unit & widget tests
        run: flutter test

      - name: Run integration tests
        run: flutter test integration_test

      - name: Upload coverage or logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-test-results
          path: |
            test/**/coverage/lcov.info
            build/**/logs/

      - name: Set QA result
        if: always()
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "result=success" >> $GITHUB_ENV
          else
            echo "result=failure" >> $GITHUB_ENV
          fi

      - name: Apply QA Labels
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        env:
          result: ${{ env.result }}
        with:
          script: |
            const labels = [
              { name: 'qa-success', color: '0E8A16', description: 'QA passed' },
              { name: 'qa-failure', color: 'B60205', description: 'QA failed' }
            ];

            const resultLabel = process.env.result === 'success' ? 'qa-success' : 'qa-failure';
            const removeLabel = resultLabel === 'qa-success' ? 'qa-failure' : 'qa-success';

            const issue_number = context.payload.pull_request.number;
            const { owner, repo } = context.repo;

            for (const label of labels) {
              try {
                await github.rest.issues.updateLabel({
                  owner,
                  repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
              } catch (error) {
                if (error.status === 404) {
                  await github.rest.issues.createLabel({
                    owner,
                    repo,
                    name: label.name,
                    color: label.color,
                    description: label.description
                  });
                }
              }
            }

            try {
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number,
                name: removeLabel
              });
            } catch (error) {
              if (error.status !== 404) throw error;
            }

            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number,
              labels: [resultLabel]
            });

      - name: Comment on PR with Result
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const resultMessage = process.env.result === 'success'
              ? `‚úÖ Flutter QA passed.\n\n[View Workflow Run](${url})`
              : `‚ùå Flutter QA failed.\n\n[View Workflow Run](${url})`;

            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: resultMessage
            });
